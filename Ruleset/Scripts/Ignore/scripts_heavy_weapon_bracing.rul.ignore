extended:
  tags:
    RuleItem:
      IS_HEAVY_WEAPON: int

  scripts:
    accuracyMultiplierBonusStats:
      - new: ROSIGMAeTweaks_aMBS_HeavyWeaponBracing
        offset: 10
        code: |
          var int isHeavyWeapon;
          var int temp;

          weapon.getTag isHeavyWeapon Tag.IS_HEAVY_WEAPON;
          # debug_log "isHeavyWeapon:" isHeavyWeapon;
          if neq isHeavyWeapon 0;
            weapon.isFuseEnabled temp;
              if eq temp 0;
                set bonus 0;
              end;
          end;
          # debug_log "bonus:" bonus;
          return bonus;

items:

  - type: STR_AUTO_CANNON
    fuseType: -2
    costPrime:
      time: 0
      energy: 100
    tags:
      IS_HEAVY_WEAPON: 1



skills:
  - type: STR_BRACE
    tags:
      BRACING_SKILL: 1
    costUse:
      time: 4
    flatUse:
      time: true
    compatibleWeapons:
      - STR_AUTO_CANNON
    checkHandsOnly: true

extended:
  tags:
    RuleSkill:
      BRACING_SKILL: int
    BattleUnit:
      BRACED: int
      STAMINA_BEFORE: int
      ENERGY_BEFORE: int
    RuleItem:
      BRACING_ALLOWED: int

  scripts:
    skillUseUnit:
      - offset: 2 #Brace skill
        code: |
          var int bracingSkill;
          var int bracingState;
          var int staminaBefore;
          var int energyBefore;

          skill.getTag bracingSkill Tag.BRACING_SKILL;
          if eq bracingSkill 1;
            actor.getTag bracingState Tag.BRACED;
            if eq bracingState 0;
              actor.getEnergy energyBefore;
              actor.setTag Tag.ENERGY_BEFORE energyBefore;
              actor.Stats.getStamina staminaBefore;
              actor.setTag Tag.STAMINA_BEFORE staminaBefore;
              actor.Stats.setStamina 1;
              actor.setTag Tag.BRACED 1;
              battle_game.flashMessage "STR_BRACED";
            else;
              actor.getTag staminaBefore Tag.STAMINA_BEFORE;
              actor.Stats.setStamina staminaBefore;
              actor.getTag energyBefore Tag.ENERGY_BEFORE;
              actor.setEnergy energyBefore;
              actor.setTag Tag.BRACED 0;
              battle_game.flashMessage "STR_READY_MOVE";
            end;
          end;
          return;

    accuracyMultiplierBonusStats:
      - offset: 1 #Brace skill
        code: |
          var int bracingAllowed;
          var int bracingState;

          unit.getTag bracingState Tag.BRACED;
          weapon.getTag bracingAllowed Tag.BRACING_ALLOWED;
          if and gt bracingAllowed 0 lt bracingState 1;
            set bonus 0;
          end;
          return bonus;

items:

  - type: STR_AUTO_CANNON
    tags:
      BRACING_ALLOWED: 1

soldiers:
  - type: STR_SOLDIER
    skills:
      - STR_BRACE
    skillIconSprite: 0

extraSprites:

  - type: SPICONS.DAT
    width: 32
    height: 24
    files:
      0: Resources/DECALS/SPICON0.png